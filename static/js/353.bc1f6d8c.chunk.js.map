{"version":3,"file":"static/js/353.bc1f6d8c.chunk.js","mappings":"6OAGaA,EAAWC,EAAAA,GAAAA,IAAH,6UAaRC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mUAUV,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAEY,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IACZ,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,KAAnB,I,SCzBC,SAASC,IACtB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/B,OACE,8BACIF,GAMA,SAACR,EAAD,CAAUW,GAAG,aAAb,gCALA,UAACb,EAAD,YACE,SAACE,EAAD,CAAUW,GAAG,SAAb,oBACA,SAACX,EAAD,CAAUW,GAAG,UAAb,wBAOT,C","sources":["pages/home/home.style.js","pages/home/home.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const AuthPage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  /* margin-top: 50px; */\n  border-radius: 12px;\n  background-color: rgb(238, 241, 243, 0.8);\n  box-shadow: 1px 11px 28px -9px rgba(192, 192, 192, 1);\n  width: 250px;\n  height: 300px;\n  margin: 60px auto;\n`;\nexport const AuthForm = styled(NavLink)`\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 5px;\n  min-width: 170px;\n  min-height: 40px;\n  font-family: 'Great Vibes', cursive;\n  font-size: large;\n  border-radius: 14px;\n  background-color: #181818;\n  color: ${p => p.theme.colors.white};\n  &:hover {\n    background-color: ${p => p.theme.colors.white};\n    color: ${p => p.theme.colors.muted};\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/selectors';\nimport { AuthPage, AuthForm } from './home.style';\n\nexport default function Home() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    <>\n      {!isLoggedIn ? (\n        <AuthPage>\n          <AuthForm to=\"/login\">Login</AuthForm>\n          <AuthForm to=\"/SignUp\">SignUp</AuthForm>\n        </AuthPage>\n      ) : (\n        <AuthForm to=\"/PhoneBook\">Open my phonebook</AuthForm>\n      )}\n    </>\n  );\n}\n"],"names":["AuthPage","styled","AuthForm","NavLink","p","theme","colors","white","muted","Home","isLoggedIn","useSelector","getIsLoggedIn","to"],"sourceRoot":""}